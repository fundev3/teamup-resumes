trigger:
  branches:
    include:
      - main
      - develop
      
pr:
  branches:
    include:
      - main
      - develop
  drafts: false

variables:
  projects: '**/*.sln'
  azureSubscription: 'devlevel3-dev (a797242d-ce60-41aa-98ca-2e22d5221cfe)'
  appName: 'team-up-backend-resumes'
  vmImageName: 'ubuntu-latest'
  functionAppName: 'fa-tuapi-resumes-bra-dev'


stages:
  - stage: Build
    displayName: Build stage
  
    jobs:
    - job: Build
      displayName: Build

      pool:
        vmImage: $(vmImageName)

      steps:
      - task: UseDotNet@2
        displayName: 'Install DotNet'
        inputs:
          packageType: 'sdk'
          version: '3.x'

      - task: DotNetCoreCLI@2
        displayName: 'DotNet Build'
        inputs:
          command: 'build'
          projects: $(projects)
          arguments: '--output $(Build.ArtifactStagingDirectory)/drop $(styleCopEnabled)'

      - task: DotNetCoreCLI@2
        displayName: 'DotNet Tests'
        inputs:
          command: test
          projects:  $(testsProjects)
        
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/drop'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          replaceExistingArchive: true
      - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        artifact: drop

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()

    jobs:
    - deployment: Deploy
      displayName: Deploy
      environment: 'development'
      pool:
        vmImage: $(vmImageName)

      strategy:
        runOnce:
          deploy:

            steps:
            - task: AzureFunctionApp@1
              displayName: 'Azure functions app deploy'
              inputs:
                azureSubscription: '$(azureSubscription)'
                appType: functionApp
                appName: $(functionAppName)
                package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'